java-version := "21"
arch := "aarch64"
platform := "macos"
out-name := "algorithms.jar"
jdk-url := "https://corretto.aws/downloads/latest/amazon-corretto-" + java-version + "-" + arch + "-" + platform + "-jdk.tar.gz"
java-home := "jdk/amazon-corretto-" + java-version + ".jdk/Contents/Home"
lombok-version := "1.18.30"
lombok-url := "https://projectlombok.org/downloads/lombok-" + lombok-version + ".jar"
junit-launcher-version := "1.10.2"
junit-launcher-url := "https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/" + junit-launcher-version + "/junit-platform-console-standalone-" + junit-launcher-version + ".jar"
junit-version := "5.10.2"
junit-url := "https://repo1.maven.org/maven2/org/junit/jupiter/junit-jupiter-api/" + junit-version + "/junit-jupiter-api-" + junit-version + ".jar"
nursery-heap-size := "1024m"
initial-heap-size := "1024m"
max-heap-size := "1024m"
thread-stack-size := "4096k"
manifest := """
    Manifest-Version: 1.0
    Created-By: 21
    Main-Class: org.algorithms.Main
"""

download-jdk:
    if [ ! -d "jdk" ]; then \
      mkdir jdk; \
      wget -O jdk/jdk-corretto.tar.gz "{{jdk-url}}"; \
      pushd jdk || exit; \
      tar -xf jdk-corretto.tar.gz; \
      rm jdk-corretto.tar.gz; \
      popd || exit; \
    fi

download-lombok:
    if [ ! -f "target/dependencies/lombok.jar" ]; then \
      mkdir -p target/dependencies; \
      wget -O target/dependencies/lombok.jar "{{lombok-url}}"; \
    fi

build: download-jdk download-lombok
    mkdir -p target
    {{java-home}}/bin/javac -proc:full \
      -cp target/dependencies/lombok.jar \
      -d target/classes \
      $(find "src/main" -name "*.java")

package: build
    mkdir -p target/META-INF
    mkdir -p target/libs
    echo "{{manifest}}" > target/META-INF/MANIFEST.MF
    pushd target/classes && zip -r ../libs/{{out-name}} . && popd
    pushd target && zip -ur libs/{{out-name}} META-INF && popd

run: package
    {{java-home}}/bin/java -jar target/libs/{{out-name}} \
        -Xmn{{nursery-heap-size}} \
        -Xms{{initial-heap-size}} \
        -Xmx{{max-heap-size}} \
        -Xss{{thread-stack-size}}

download-junit-launcher:
    if [ ! -f "target/dependencies/junit-launcher.jar" ]; then \
      mkdir -p target/dependencies; \
      wget -O target/dependencies/junit-launcher.jar "{{junit-launcher-url}}"; \
    fi

download-junit:
    if [ ! -f "target/dependencies/junit.jar" ]; then \
      mkdir -p target/dependencies; \
      wget -O target/dependencies/junit.jar "{{junit-url}}"; \
    fi

build-test: download-junit build
    {{java-home}}/bin/javac -cp "target/dependencies/junit.jar:target/classes" \
        -Xlint:none \
        -d target/testClasses \
        $(find "src/test" -name "*.java")

test: build-test download-junit-launcher
    {{java-home}}/bin/java -jar target/dependencies/junit-launcher.jar execute \
        -cp "target/classes:target/testClasses" \
        --scan-class-path="target/testClasses"

clean:
    rm -rf target

remove-jdk:
    rm -rf jdk